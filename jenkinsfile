pipeline {
    agent any

    environment {
        // Configuración de la máquina remota
        remoteHost = '192.168.0.31'
        remoteUser = 'lucas'
        privateKey = credentials('key_infra')
        dbname = 'joomla_db'
    }
    stages {

        stage('Initialize') {
            steps {
                script {
                    def dockerHome = tool 'myDocker'
                    env.PATH = "${dockerHome}/bin:${env.PATH}"
                    sh "sudo service docker start"
                }
            }
        }

        stage('Construir y ejecutar contenedor Docker') {
            steps {
                script {
                    // Establecer túnel SSH a la máquina de producción
                    sh "ssh -i $privateKey ${remoteUser}@${remoteHost} -L 3306:localhost:3306 -N -f -o StrictHostKeyChecking=no"
                    
                    // Construir y ejecutar el contenedor Docker
                    sh "docker build -t mi-app ."
                    sh "docker run -d -p 5000:5000 --name mi-app-container mi-app"
                    
                    // Puedes agregar más pasos para verificar y esperar a que el contenedor se inicie antes de continuar
                }
            }
        }

        stage('Ejecutar app.py') {
            steps {
                script {
                    // Puedes usar la variable de entorno establecida en el stage anterior
                    sh "docker exec mi-app-container python app.py ${env.DB_URL}"
                }
            }
        }

        stage('Ejecutar test_app.py') {
            steps {
                script {
                    // También puedes usar la variable de entorno aquí
                    sh "docker exec mi-app-container python test_app.py ${env.DB_URL}"
                }
            }
        }
    }

    post {
        always {
            // Siempre cerrar la conexión SSH y detener el contenedor después de finalizar el pipeline
            script {
                sh "pkill -f 'ssh -i ${privateKey} ${remoteUser}@${remoteHost} -L 3306:localhost:3306 -N -f'"
                sh "docker stop mi-app-container"
                sh "docker rm mi-app-container"
            }
        }
    }
}
